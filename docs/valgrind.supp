
{
   ignore glibc getaddrinfo
   Memcheck:Param
   sendmsg(mmsg[0].msg_hdr)
   fun:sendmmsg
   fun:__libc_res_nsend
   fun:__libc_res_nquery
   fun:__libc_res_nsearch
   fun:_nss_dns_gethostbyname4_r
   fun:gaih_inet
   fun:getaddrinfo
}

{
   ignore pcsc-lite SCardConnect
   Memcheck:Param
   socketcall.sendto(msg)
   fun:send
   fun:MessageSend
   fun:MessageSendWithHeader
   fun:SCardConnect
}

{
  ignore openssl malloc
  Memcheck:Leak
  fun:malloc
  fun:CRYPTO_malloc
  ...
  obj:*libcrypto*
}
 
{
  ignore openssl realloc
  Memcheck:Leak
  fun:realloc
  fun:CRYPTO_realloc
  ...
  obj:*libcrypto*
}

{
  ignore libssl cond
  Memcheck:Cond
  obj:*libssl*
}

{
  ignore libssl value
  Memcheck:Value4
  obj:*libssl*
}

{
  ignore ssl3_read_bytes tls1_enc
  Memcheck:Cond
  fun:tls1_enc
  fun:ssl3_read_bytes
  obj:*libssl*
}

{
  ignore ssl3_read_bytes memcpy
  Memcheck:Cond
  fun:memcpy@@GLIBC_2.14
  fun:ssl3_read_bytes
  obj:*libssl*
}

{
  ignore ssl3_read_bytes value8
  Memcheck:Value8
  fun:memcpy@@GLIBC_2.14
  fun:ssl3_read_bytes
  obj:*libssl*
}

{
  ignore write buf BIO_write
  Memcheck:Param
  write(buf)
  obj:*libpthread*
  obj:*libcrypto*
  fun:BIO_write
  fun:ssl3_write_pending
  fun:ssl3_write_bytes
}

{
   g_type_init
   Memcheck:Leak
   ...
   fun:g_type_init_with_debug_flags
}
{
   gobject_init_ctor
   Memcheck:Leak
   ...
   fun:gobject_init_ctor
}
{
   g_type_register_static
   Memcheck:Leak
   ...
   fun:g_type_register_static
}
{
   g_type_register_fundamental
   Memcheck:Leak
   ...
   fun:g_type_register_fundamental
}
{
   g_type_add_interface_static
   Memcheck:Leak
   ...
   fun:g_type_add_interface_static
}
{
   g_type_class_ref
   Memcheck:Leak
   ...
   fun:g_type_class_ref
}

{
  XGetDefault
  Memcheck:Leak
  ...
  fun:XGetDefault
}
